@model IEnumerable<GoalTracker.Models.Settings>

@{
    ViewData["Title"] = "Index";
}

<h1>Settings Index</h1>

<ul class="nav">

    <a class="nav-link" data-bs-toggle="offcanvas" href="#offCanvas_SettingsCreate">
        <i class="bi-plus-circle" style="font-size: 1rem; color: #0077cc;"></i>Create New Settings
    </a>
    @await Html.PartialAsync("~/Views/Settings/OffCanvas/_SettingsCreate.cshtml", new Settings() { })

</ul>





<div class="row g-0">

    @foreach (var setting in Model)
    {
        <div class="col-md-10 offset-md-1">

            <div class="card p-3 mt-3" style="min-height: 10rem;">
                <div class="row">
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">
                                @Html.DisplayFor(modelItem => setting.Title)
                                @if (setting.Favorited)
                                {
                                    <i class="bi-star-fill" style="font-size: 1rem; color: #0077cc;"></i>
                                }
                                else
                                {
                                    <i class="bi-star" style="font-size: 1rem; color: #0077cc;"></i>
                                }
                            </h5>
                            <p class="card-text">
                                @Html.DisplayFor(modelItem => setting.Description)
                            </p>
                            
                            <p class="card-text">@setting.CreatedBy?.Email</p>
                            <p class="card-text">@setting.CreatedBy?.Id</p>
                            <p class="card-text">@setting.CreatedDate</p>

                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Default switch checkbox input</label>
                            </div>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked"
                                    checked>
                                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>
                            </div>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                                <label class="form-check-label" for="flexSwitchCheckDefault">Default switch checkbox input</label>
                            </div>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked"
                                    checked>
                                <label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>
                            </div>
                           



                        </div>
                    </div>
                    <div class="col-md-4">
                        <ul class="list-group m-3">

                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas" href="#offCanvas_SettingsDetails_@setting.Id">
                                        <i class="bi-card-text" style="font-size: 1rem; color: #0077cc;"></i> Details
                                    </a>
                                    @await Html.PartialAsync("~/Views/Settings/OffCanvas/_SettingsDetails.cshtml", setting)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas" href="#offCanvas_SettingsEdit_@setting.Id">
                                        <i class="bi-pen" style="font-size: 1rem; color: #0077cc;"></i> Edit
                                    </a>
                                    @await Html.PartialAsync("~/Views/Settings/OffCanvas/_SettingsEdit.cshtml", setting)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas" href="#offCanvas_SettingsDelete_@setting.Id">
                                        <i class="bi-trash3" style="font-size: 1rem; color: #0077cc;"></i> Delete
                                    </a>
                                    @await Html.PartialAsync("~/Views/Settings/OffCanvas/_SettingsDelete.cshtml", setting)
                                </div>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
        </div>

    }
</div>
