@model GoalTracker.Models.Dash

@{
    ViewData["Title"] = "Details";
}

<h1>Dash Details</h1>

<div>
    

    <ul class="nav">
        <li class="nav-item">
            <a class="nav-link" data-bs-toggle="offcanvas" href="#offCanvas_DashVizCreate">
                <i class="bi-plus-circle" style="font-size: 1rem; color: #0077cc;"></i>Add New DashViz
            </a>
            @await Html.PartialAsync("~/Views/DashViz/OffCanvas/_DashVizCreate.cshtml", 
                new DashViz() { ParentId = @Model.Id, Parent = @Model })
        </li>       
    </ul>



    <div class="row">
        @if (Model.Vizualizations is not null)
        {
            @foreach (var viz in Model!.Vizualizations)
            {
                <div class="card col-md-6">
                    @viz.Title
                    @viz.Name
                    @viz.Type
                </div>
            }
        }
    </div>


    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ParentId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ParentId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TargetDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TargetDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CompletedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CompletedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Completed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Completed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Favorited)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Favorited)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Icon)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Icon)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Color)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Color)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
