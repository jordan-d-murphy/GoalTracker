@model IEnumerable<GoalTracker.Models.Metric>

@{
    ViewData["Title"] = "Index";
}

<h1>Metric</h1>

<ul class="nav">

    <li class="nav-item">
        <a class="nav-link" data-bs-toggle="offcanvas" href="#offCanvas_MetricCreate">
            <i class="bi-plus-circle" style="font-size: 1rem; color: #0077cc;"></i>Create New Metric
        </a>
        @await Html.PartialAsync("~/Views/Metric/OffCanvas/_MetricCreate.cshtml", new Metric() { })
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-controller="MetricType" asp-action="Index">
            <i class="bi-calculator" style="font-size: 1rem; color: #0077cc;"></i>MetricType
        </a>
    </li>
</ul>



<div class="col-md-10 offset-md-1">
    <div class="row g-0">

        @foreach (var metric in Model)
        {



            <div class="pt-3 pe-3 col-md-6">

                <div class="card" style="height: 18rem;">
                    <div class="card-header">
                        <h5 class="card-title">
                            @Html.DisplayFor(modelItem => metric.Title)
                            @if (metric.Favorited)
                            {
                                <i class="bi-star-fill" style="font-size: 1rem; color: #0077cc;"></i>
                            }
                            else
                            {
                                <i class="bi-star" style="font-size: 1rem; color: #0077cc;"></i>
                            }
                        </h5>
                    </div>
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-body-secondary">@Html.DisplayFor(modelItem => metric.Name)</h6>
                        
                        <p class="card-text">@Html.DisplayFor(modelItem => metric.Description)</p>

                        <p class="card-text">@metric.CreatedBy?.Email</p>
                        <p class="card-text">@metric.CreatedBy?.Id</p>
                        <p class="card-text">@metric.CreatedDate</p>

                        <p class="card-text">@Html.DisplayFor(modelItem => metric.Type)</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => metric.JSONData)</p>
                        

                    </div>
                    <div class="card-footer">


                        <a class="card-link align-bottom" data-bs-toggle="offcanvas"
                            href="#offCanvas_MetricDetails_@metric.Id">
                            <i class="bi-card-text" style="font-size: 1rem; color: #0077cc;"></i>Details
                        </a>
                        @await Html.PartialAsync("~/Views/Metric/OffCanvas/_MetricDetails.cshtml", metric)


                        <a class="card-link align-bottom" data-bs-toggle="offcanvas" href="#offCanvas_MetricEdit_@metric.Id">
                            <i class="bi-pen" style="font-size: 1rem; color: #0077cc;"></i>Edit
                        </a>
                        @await Html.PartialAsync("~/Views/Metric/OffCanvas/_MetricEdit.cshtml", metric)


                        <a class="" data-bs-toggle="offcanvas" href="#offCanvas_MetricDelete_@metric.Id">
                            <i class="bi-trash3" style="font-size: 1rem; color: #0077cc;"></i> Delete
                        </a>
                        @await Html.PartialAsync("~/Views/Metric/OffCanvas/_MetricDelete.cshtml", metric)


                    </div>
                </div>
            </div>
        }
    </div>
</div>