@* @model IEnumerable<GoalTracker.Models.Team> *@

@model TeamViewModel


@{
    ViewData["Title"] = "Index";
}

<h1>Team Index</h1>



<p>
    <a class="nav-link" data-bs-toggle="offcanvas" href="#offCanvas_TeamCreate">
        <i class="bi-plus-circle" style="font-size: 1rem; color: #0077cc;"></i>Create New Team
    </a>
    @await Html.PartialAsync("~/Views/Team/OffCanvas/_TeamCreate.cshtml", new Team() { })

</p>



@if (!String.IsNullOrEmpty(@Model.TeamVMMessage))
{
    <div class="alert alert-@Model.TeamVMMessageType alert-dismissible fade show" role="alert">
    <strong>@Model.TeamVMMessage</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}



@if (Model.Teams is not null)
{
    @foreach (var team in Model.Teams)
    {
        <div class="row">

    <div class="card mb-3 col-md-10 offset-md-1">
        <div class="card-body">
            <h5 class="card-title">@team.Title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@team.Category</h6>
                    <p class="card-text">@team.Description</p>
                    <div class="row">


                        <div class="col-md-4">
                            <ul>
                                <li class="list-group-item d-flex justify-content-start align-items-start">
                                    <div>
                                        <a class="" data-bs-toggle="modal" data-bs-target="#addMemberTeamModal_@team.Id"
                                            href="">
                                            <i class="bi-person-plus" style="font-size: 1rem; color: #0077cc;"></i> Add Team
                                            Member
                                        </a>
                                        @await Html.PartialAsync("~/Views/Team/OffCanvas/_AddMember.cshtml",
                                                 new TeamViewModel { AddTeam = team, AllUsers = Model.AllUsers, })
                                    </div>
                                </li>
                                <li class="list-group-item d-flex justify-content-start align-items-start">
                                    <div>
                                        <a class="" data-bs-toggle="offcanvas" href="#offCanvas_TeamDetails_@team.Id">
                                            <i class="bi-card-text" style="font-size: 1rem; color: #0077cc;"></i> Details
                                        </a>
                                        @await Html.PartialAsync("~/Views/Team/OffCanvas/_TeamDetails.cshtml", @team)
                                    </div>
                                </li>
                                <li class="list-group-item d-flex justify-content-start align-items-start">
                                    <div>
                                        <a class="" data-bs-toggle="offcanvas" href="#offCanvas_TeamEdit_@team.Id">
                                            <i class="bi-pen" style="font-size: 1rem; color: #0077cc;"></i> Edit
                                        </a>
                                        @await Html.PartialAsync("~/Views/Team/OffCanvas/_TeamEdit.cshtml", @team)
                                    </div>
                                </li>
                                <li class="list-group-item d-flex justify-content-start align-items-start">
                                    <div>
                                        <a class="" data-bs-toggle="offcanvas" href="#offCanvas_TeamDelete_@team.Id">
                                            <i class="bi-trash3" style="font-size: 1rem; color: #0077cc;"></i> Delete
                                        </a>
                                        @await Html.PartialAsync("~/Views/Team/OffCanvas/_TeamDelete.cshtml", @team)
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div class="col-md-8">
                            <div class="card" style="">
                                <ul class="list-group list-group-flush">

                                    @if (team.TeamMembers is not null && team.TeamMembers.Count > 0)
                                    {
                                        @foreach (var member in team.TeamMembers)
                                        {
                                            <li class="list-group-item">
                                                <div class="row">
                                                    <div class="col-8">
                                                        @member.Email
                                                    </div>
                                                    <div class="col-4 text-end">
                                                        @await Html.PartialAsync("~/Views/Team/OffCanvas/_RemoveMember.cshtml",
                                                            new TeamViewModel()
                                                            {
                                                                AllUsers = Model.AllUsers,
                                                                RemoveTeam = team,
                                                                RemoveUser = member
                                                            })
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    }
                                    else
                                    {
                                        <li class="list-group-item">This team has no members at this time.</li>
                                    }

                                </ul>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>

    }
}
