@model IEnumerable<GoalTracker.Models.Subscription>

@{
    ViewData["Title"] = "Index";
}

<h1>Subscription Index</h1>

<ul class="nav">
    <li class="nav-item">
        <a class="nav-link" data-bs-toggle="offcanvas" href="#offCanvas_SubscriptionCreate">
            <i class="bi-plus-circle" style="font-size: 1rem; color: #0077cc;"></i>Create New Subscription
        </a>
        @await Html.PartialAsync("~/Views/Subscription/OffCanvas/_SubscriptionCreate.cshtml", new Subscription() { })
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-controller="Billing" asp-action="Index">
            <i class="bi-bank" style="font-size: 1rem; color: #0077cc;"></i>Billing
        </a>
    </li>
</ul>



<div class="row g-0">

    @foreach (var subscription in Model)
    {
        <div class="col-md-10 offset-md-1">


            <div class="card p-3 mt-3" style="min-height: 10rem;">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="card-body">
                            <h5 class="card-title">@subscription.Name</h5>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas"
                                        href="#offCanvas_SubscriptionDetails_@subscription.Id">
                                        <i class="bi-card-text" style="font-size: 1rem; color: #0077cc;"></i> Details
                                    </a>
                                    @await Html.PartialAsync("~/Views/Subscription/OffCanvas/_SubscriptionDetails.cshtml",
                                             subscription)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas"
                                        href="#offCanvas_SubscriptionEdit_@subscription.Id">
                                        <i class="bi-pen" style="font-size: 1rem; color: #0077cc;"></i> Edit
                                    </a>
                                    @await Html.PartialAsync("~/Views/Subscription/OffCanvas/_SubscriptionEdit.cshtml",
                                             subscription)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas"
                                        href="#offCanvas_SubscriptionDelete_@subscription.Id">
                                        <i class="bi-trash3" style="font-size: 1rem; color: #0077cc;"></i> Delete
                                    </a>
                                    @await Html.PartialAsync("~/Views/Subscription/OffCanvas/_SubscriptionDelete.cshtml",
                                             subscription)
                                </div>
                            </li>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="card-body">
                            <h5 class="card-title">@subscription.Details</h5>
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.Id)</strong> @subscription.Id
                            </li>
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.Tier)</strong> @subscription.Tier
                            </li>
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.Price)</strong> @subscription.Price
                            </li>
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.BillingFrequency)</strong>
                                @subscription.BillingFrequency
                            </li>


                        </ul>

                    </div>
                </div>
            </div>

        </div>
    }

</div>