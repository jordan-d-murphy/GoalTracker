@model IEnumerable<GoalTracker.Models.Project>

@{
    ViewData["Title"] = "Index";
}

<h1>Projects</h1>


<ul class="nav">

    <a class="nav-link" data-bs-toggle="offcanvas" href="#offCanvas_ProjectCreate">
        <i class="bi-plus-circle" style="font-size: 1rem; color: #0077cc;"></i>Create New Project
    </a>
    @await Html.PartialAsync("~/Views/Project/OffCanvas/_ProjectCreate.cshtml", new Project() { })

</ul>




<div class="row g-0">

    @foreach (var project in Model)
    {
        <div class="col-md-10 offset-md-1">

            <div class="card p-3 mt-3">
                <div class="row">
                    <div class="col-md-4">
                        <ul class="list-group">

                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                <div class="ms-2 me-auto">
                                    <div class="fw-bold">
                                        @Html.DisplayNameFor(model => project.Category)
                                    </div>
                                    @Html.DisplayFor(modelItem => project.Category)
                                </div>
                            </li>
                            @if (!String.IsNullOrEmpty(project.Color))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start"
                                    style="background-color: @project.Color; color: @project!.GetTextColor();">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold">
                                            @Html.DisplayNameFor(model => project.Color)
                                        </div>
                                        @Html.DisplayFor(modelItem => project.Color)
                                    </div>
                                </li>
                            }
                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                <div class="ms-2 me-auto">
                                    <div class="fw-bold">
                                        @Html.DisplayNameFor(model => project.CreatedDate)
                                    </div>
                                    @Html.DisplayFor(modelItem => project.CreatedDate)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                <div class="ms-2 me-auto">
                                    <div class="fw-bold">
                                        @Html.DisplayNameFor(model => project.TargetDate)
                                    </div>
                                    @Html.DisplayFor(modelItem => project.TargetDate)
                                </div>
                            </li>
                            @if (project.Completed)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold">
                                            @Html.DisplayNameFor(model => project.Completed)
                                        </div>
                                        @Html.DisplayFor(modelItem => project.CompletedDate)
                                    </div>
                                </li>
                            }
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas" href="#offCanvas_ProjectDetails_@project.Id">
                                        <i class="bi-card-text" style="font-size: 1rem; color: #0077cc;"></i> Details
                                    </a>
                                    @await Html.PartialAsync("~/Views/Project/OffCanvas/_ProjectDetails.cshtml", project)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas" href="#offCanvas_ProjectEdit_@project.Id">
                                        <i class="bi-pen" style="font-size: 1rem; color: #0077cc;"></i> Edit
                                    </a>
                                    @await Html.PartialAsync("~/Views/Project/OffCanvas/_ProjectEdit.cshtml", project)
                                </div>
                            </li>
                            <li class="list-group-item d-flex justify-content-start align-items-start">
                                <div>
                                    <a class="" data-bs-toggle="offcanvas" href="#offCanvas_ProjectDelete_@project.Id">
                                        <i class="bi-trash3" style="font-size: 1rem; color: #0077cc;"></i> Delete
                                    </a>
                                    @await Html.PartialAsync("~/Views/Project/OffCanvas/_ProjectDelete.cshtml", project)
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">
                                @Html.DisplayFor(modelItem => project.Title)
                                @if (project.Favorited)
                                {
                                    <i class="bi-star-fill" style="font-size: 1rem; color: #0077cc;"></i>
                                }
                                else
                                {
                                    <i class="bi-star" style="font-size: 1rem; color: #0077cc;"></i>
                                }
                            </h5>
                            <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => project.Team)</h6>
                            <p class="card-text">
                                @Html.DisplayFor(modelItem => project.Description)
                            </p>
                            <p class="card-text">@project.Description</p>
                            <p class="card-text">@project.CreatedBy?.Email</p>
                            <p class="card-text">@project.CreatedBy?.Id</p>
                            <p class="card-text">@project.CreatedDate</p>
                            <a href="#" class="card-link">Card link</a>
                            <a href="#" class="card-link">Another link</a>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    }
</div>
